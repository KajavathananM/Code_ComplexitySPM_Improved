{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\Code_Complexity_SPM\\\\Front_End\\\\src\\\\components\\\\Home\\\\FilePondUploader.js\";\nimport React, { Component } from 'react';\nimport { FilePond } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport Highlight from 'react-highlight';\nimport 'highlight.js/styles/github.css';\nimport TableDisplay from './TableDisplay';\nimport Pie_Dragable from '../Data_Visualization/Pie_Dragable';\nimport ReChart_Bar from '../Data_Visualization/ReChart_Bar';\n\nclass FilePondUploader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      content: '',\n      showVisualData: false,\n      showFormatedData: false,\n      showAnalysisData: false,\n      formatedContent: '',\n      Cs: [],\n      Cr: [],\n      Ctc: [],\n      Cnc: [],\n      Ci: []\n    };\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.showContent = this.showContent.bind(this);\n    this.showFormatedContent = this.showFormatedContent.bind(this);\n    this.ShowVisual = this.ShowVisual.bind(this);\n    this.showAnalysis = this.showAnalysis.bind(this);\n    this.changeFormatted = this.changeFormatted.bind(this);\n    this.changeVisual = this.changeVisual.bind(this);\n    this.changeAnalysis = this.changeAnalysis.bind(this);\n  }\n\n  handleInit() {\n    console.log(\"FilePond instance has initialised\", this.pond);\n  }\n\n  handlePondFile(error, file) {\n    if (error) {\n      console.log('Oh no');\n      return;\n    }\n\n    const fileId = JSON.parse(file.serverId);\n    this.setState({\n      formatedContent: fileId.content,\n      Cs: fileId.cs,\n      Cr: fileId.cr,\n      Ctc: fileId.ctc,\n      Cnc: fileId.cnc,\n      Ci: fileId.ci\n    }); // console.log('File added', fileId.cs, fileId.ctc, fileId.cnc, fileId.ci);\n  }\n\n  handleFileChoosen(file) {\n    this.fileReader = new FileReader();\n\n    this.fileReader.onload = e => {\n      const formattedText = this.fileReader.result;\n      console.log(formattedText);\n      this.setState({\n        content: formattedText,\n        show: true\n      });\n    };\n\n    this.fileReader.readAsText(file);\n  }\n\n  showContent() {\n    if (this.state.content != '') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          marginLeft: '350px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Input File Content\"), React.createElement(\"hr\", {\n        className: \"col mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Highlight, {\n        language: \"java\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.content), React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          marginLeft: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Formatted Content\",\n        color: \"secondary\",\n        className: \"btn btn-success\",\n        onClick: this.changeFormatted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Complexity Analysis\",\n        className: \"btn btn-danger\",\n        onClick: this.changeAnalysis,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Data Visualization\",\n        className: \"btn btn-warning\",\n        onClick: this.changeVisual,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))));\n    }\n  }\n\n  changeVisual() {\n    this.setState({\n      showVisualData: !this.state.showVisualData\n    });\n  }\n\n  changeFormatted() {\n    this.setState({\n      showFormatedData: !this.state.showFormatedData\n    });\n  }\n\n  changeAnalysis() {\n    this.setState({\n      showAnalysisData: !this.state.showAnalysisData\n    });\n  }\n\n  ShowVisual() {\n    if (this.state.formatedContent != '' && this.state.showVisualData) {\n      return React.createElement(\"div\", {\n        style: {\n          marginLeft: '-100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Pie_Dragable, {\n        Cs: this.state.Cs,\n        Cr: this.state.Cr,\n        Ctc: this.state.Ctc,\n        Cnc: this.state.Cnc,\n        Ci: this.state.Ci,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(ReChart_Bar, {\n        Cs: this.state.Cs,\n        Cr: this.state.Cr,\n        Ctc: this.state.Ctc,\n        Cnc: this.state.Cnc,\n        Ci: this.state.Ci,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    }\n  }\n\n  showFormatedContent() {\n    if (this.state.formatedContent != '' && this.state.showFormatedData) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          color: 'Orange',\n          marginLeft: '350px',\n          marginTop: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Formated File Content\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"col mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Highlight, {\n        language: \"java\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.state.formatedContent));\n    }\n  }\n\n  showAnalysis() {\n    if (this.state.formatedContent != '' && this.state.showAnalysisData) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(TableDisplay, {\n        content: this.state.formatedContent,\n        Cs: this.state.Cs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), \"Cr=\", this.state.Cr, \" /> Ctc=\", this.state.Ctc, \"Cnc=\", this.state.Cnc, \"Ci=\", this.state.Ci);\n    }\n  }\n\n  clearContent() {\n    this.setState({\n      content: \"\",\n      formatedContent: \"\",\n      files: []\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(FilePond, {\n      name: \"file\",\n      files: this.state.files,\n      server: \"http://localhost:4000/admin/file/uploadfile\",\n      onprocessfile: this.handlePondFile.bind(this),\n      onupdatefiles: fileItems => {\n        // Set currently active file objects to this.state\n        this.setState({\n          files: fileItems.map(fileItem => fileItem.file)\n        }, () => {\n          if (this.state.files.length > 0) this.handleFileChoosen(fileItems[0].file);\n        });\n      },\n      onremovefile: this.clearContent.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), this.showContent(), this.showFormatedContent(), this.ShowVisual(), this.showAnalysis());\n  }\n\n}\n\nexport default FilePondUploader;","map":{"version":3,"sources":["E:\\New folder\\Code_Complexity_SPM\\Front_End\\src\\components\\Home\\FilePondUploader.js"],"names":["React","Component","FilePond","Highlight","TableDisplay","Pie_Dragable","ReChart_Bar","FilePondUploader","constructor","props","state","files","content","showVisualData","showFormatedData","showAnalysisData","formatedContent","Cs","Cr","Ctc","Cnc","Ci","handleFileChoosen","bind","showContent","showFormatedContent","ShowVisual","showAnalysis","changeFormatted","changeVisual","changeAnalysis","handleInit","console","log","pond","handlePondFile","error","file","fileId","JSON","parse","serverId","setState","cs","cr","ctc","cnc","ci","fileReader","FileReader","onload","e","formattedText","result","show","readAsText","marginLeft","color","marginTop","clearContent","render","fileItems","map","fileItem","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FilePond } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\n\r\nimport Highlight from 'react-highlight'\r\n\r\nimport 'highlight.js/styles/github.css'\r\nimport TableDisplay from './TableDisplay';\r\n\r\nimport Pie_Dragable from '../Data_Visualization/Pie_Dragable';\r\nimport ReChart_Bar from '../Data_Visualization/ReChart_Bar';\r\n\r\n\r\nclass FilePondUploader extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      files: [],\r\n      content: '',\r\n      showVisualData: false,\r\n      showFormatedData: false,\r\n      showAnalysisData: false,\r\n      formatedContent: '',\r\n      Cs: [],\r\n      Cr:[],\r\n      Ctc: [],\r\n      Cnc: [],\r\n      Ci: []\r\n\r\n    };\r\n\r\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\r\n    this.showContent = this.showContent.bind(this);\r\n    this.showFormatedContent = this.showFormatedContent.bind(this);\r\n    this.ShowVisual = this.ShowVisual.bind(this);\r\n    this.showAnalysis = this.showAnalysis.bind(this);\r\n    this.changeFormatted = this.changeFormatted.bind(this);\r\n    this.changeVisual = this.changeVisual.bind(this);\r\n    this.changeAnalysis = this.changeAnalysis.bind(this);\r\n  }\r\n\r\n  handleInit() {\r\n    console.log(\"FilePond instance has initialised\", this.pond);\r\n  }\r\n\r\n  handlePondFile(error, file) {\r\n    if (error) {\r\n      console.log('Oh no');\r\n      return;\r\n    }\r\n    const fileId = JSON.parse(file.serverId)\r\n    this.setState({\r\n      formatedContent: fileId.content,\r\n      Cs: fileId.cs,\r\n      Cr : fileId.cr,\r\n      Ctc: fileId.ctc,\r\n      Cnc: fileId.cnc,\r\n      Ci: fileId.ci\r\n    })\r\n    // console.log('File added', fileId.cs, fileId.ctc, fileId.cnc, fileId.ci);\r\n\r\n\r\n  }\r\n\r\n  handleFileChoosen(file) {\r\n    this.fileReader = new FileReader();\r\n\r\n    this.fileReader.onload = (e) => {\r\n      const formattedText = this.fileReader.result;\r\n\r\n      console.log(formattedText)\r\n\r\n      this.setState({\r\n        content: formattedText,\r\n        show: true\r\n      })\r\n    }\r\n    this.fileReader.readAsText(file)\r\n\r\n\r\n  }\r\n\r\n\r\n  showContent() {\r\n    if (this.state.content != '') {\r\n      return (\r\n        <div>\r\n          <h4 style={{ marginLeft: '350px' }}>Input File Content</h4>\r\n          <hr className=\"col mb-3\" />\r\n          <Highlight language=\"java\">\r\n            {this.state.content}\r\n          </Highlight>\r\n\r\n          <div className=\"row\" style={{marginLeft:'60px'}}>\r\n            <div className=\"col md-4\">\r\n              <input\r\n                type=\"button\"\r\n                value=\"Formatted Content\"\r\n                color=\"secondary\"\r\n                className=\"btn btn-success\"\r\n                onClick={this.changeFormatted} />\r\n\r\n            </div>\r\n            <div className=\"col md-4\">\r\n              <input\r\n                type=\"button\"\r\n                value=\"Complexity Analysis\"\r\n                className=\"btn btn-danger\"\r\n                onClick={this.changeAnalysis} />\r\n\r\n            </div>\r\n            <div className=\"col md-4\">\r\n              <input\r\n                type=\"button\"\r\n                value=\"Data Visualization\"\r\n                className=\"btn btn-warning\"\r\n                onClick={this.changeVisual} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  changeVisual() {\r\n    this.setState({ showVisualData: !this.state.showVisualData })\r\n  }\r\n\r\n  changeFormatted() {\r\n    this.setState({ showFormatedData: !this.state.showFormatedData })\r\n  }\r\n\r\n  changeAnalysis() {\r\n    this.setState({ showAnalysisData: !this.state.showAnalysisData })\r\n  }\r\n\r\n  ShowVisual() {\r\n    if (this.state.formatedContent != '' && this.state.showVisualData) {\r\n      return (\r\n        <div style={{ marginLeft: '-100px' }}>\r\n          {/* <Reversed_BarChart \r\n          Cs={this.state.Cs}\r\n          Ctc={this.state.Ctc}\r\n          Cnc={this.state.Cnc}\r\n          Ci={this.state.Ci}\r\n        /> */}\r\n\r\n          <Pie_Dragable\r\n            Cs={this.state.Cs}\r\n            Cr={this.state.Cr}\r\n            Ctc={this.state.Ctc}\r\n            Cnc={this.state.Cnc}\r\n            Ci={this.state.Ci}\r\n          />\r\n\r\n          <ReChart_Bar\r\n            Cs={this.state.Cs}\r\n            Cr={this.state.Cr}\r\n            Ctc={this.state.Ctc}\r\n            Cnc={this.state.Cnc}\r\n            Ci={this.state.Ci}\r\n          />\r\n        </div>)\r\n    }\r\n  }\r\n\r\n  showFormatedContent() {\r\n    if (this.state.formatedContent != '' && this.state.showFormatedData) {\r\n      return (\r\n        <div>\r\n          <h4 style={{ color: 'Orange', marginLeft: '350px', marginTop: '50px' }}>Formated File Content</h4><br />\r\n\r\n          <hr className=\"col mb-3\" />\r\n          <Highlight language=\"java\">\r\n            {this.state.formatedContent}\r\n          </Highlight>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  showAnalysis() {\r\n    if (this.state.formatedContent != '' && this.state.showAnalysisData) {\r\n      return (\r\n        <div>\r\n\r\n          <TableDisplay\r\n            content={this.state.formatedContent}\r\n            Cs={this.state.Cs} />\r\n            Cr={this.state.Cr} />\r\n            Ctc={this.state.Ctc}\r\n            Cnc={this.state.Cnc}\r\n            Ci={this.state.Ci}\r\n\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  clearContent() {\r\n    this.setState({\r\n      content: \"\",\r\n      formatedContent: \"\",\r\n      files: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <FilePond\r\n          name={\"file\"}\r\n          files={this.state.files}\r\n          server=\"http://localhost:4000/admin/file/uploadfile\"\r\n          onprocessfile={this.handlePondFile.bind(this)}\r\n          onupdatefiles={fileItems => {\r\n            // Set currently active file objects to this.state\r\n            this.setState({\r\n              files: fileItems.map(fileItem => fileItem.file)\r\n            }, () => {\r\n              if (this.state.files.length > 0)\r\n                this.handleFileChoosen(fileItems[0].file)\r\n            });\r\n\r\n\r\n          }}\r\n          onremovefile={this.clearContent.bind(this)}\r\n        />\r\n\r\n        {this.showContent()}\r\n\r\n        {this.showFormatedContent()}\r\n\r\n        {this.ShowVisual()}\r\n\r\n        {this.showAnalysis()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilePondUploader;"]},"metadata":{},"sourceType":"module"}