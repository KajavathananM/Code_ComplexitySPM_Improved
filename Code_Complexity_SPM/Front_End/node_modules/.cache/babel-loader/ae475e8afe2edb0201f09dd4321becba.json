{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\Code_Complexity_SPM\\\\Front_End\\\\src\\\\components\\\\Data_Visualization\\\\ReChart_Bar.js\";\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, BarChart, Bar } from 'recharts';\nexport default class ReChart_Bar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      Cs: props.Cs,\n      Cr: props.Cr,\n      Ctc: props.Ctc,\n      Cnc: props.Cnc,\n      Ci: props.Ci\n    };\n  }\n\n  componentDidMount() {\n    let tempArr = [];\n\n    for (let i = 0; i < this.state.Ctc.length; i++) {\n      let tempData = {\n        name: 'Line ' + (i + 1),\n        \"Complexity_By_Type\": this.state.Ctc[i],\n        \"Complexity_By_Nested\": this.state.Cnc[i],\n        \"Complexity_By_Size\": this.state.Cs[i],\n        \"Complexity_By_Recursion\": this.state.Cr[i],\n        \"Complexity_By_Inheritence\": this.state.Ci[i]\n      };\n      tempArr.push(tempData);\n    } // Add data\n\n\n    this.setState({\n      data: tempArr\n    });\n  }\n\n  render() {\n    const CtcMax = Math.max(...this.state.Ctc);\n    const CncMax = Math.max(...this.state.Cnc);\n    const CsMax = Math.max(...this.state.Cs);\n    const CrMax = Math.max(...this.state.Cr);\n    const CiMax = Math.max(...this.state.Ci);\n    const maxAll = Math.max(CtcMax, CncMax, CsMax, CrMax, CiMax);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 1200,\n      height: 400,\n      data: this.state.data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      type: \"number\",\n      domain: [0, maxAll],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      verticalAlign: \"top\",\n      height: 36,\n      layout: \"vetical\",\n      align: \"right\",\n      wrapperStyle: {\n        paddingLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Complexity_By_Type\",\n      stroke: \"#8884d8\",\n      height: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Complexity_By_Nested\",\n      stroke: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Complexity_By_Size\",\n      stroke: \"#f56c42\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Complexity_By_Recursion\",\n      stroke: \"#f56c42\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Complexity_By_Inheritence\",\n      stroke: \"#6cf542\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))));\n  }\n\n}\nReChart_Bar.jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';","map":{"version":3,"sources":["E:\\New folder\\Code_Complexity_SPM\\Front_End\\src\\components\\Data_Visualization\\ReChart_Bar.js"],"names":["React","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","BarChart","Bar","ReChart_Bar","constructor","props","state","data","Cs","Cr","Ctc","Cnc","Ci","componentDidMount","tempArr","i","length","tempData","name","push","setState","render","CtcMax","Math","max","CncMax","CsMax","CrMax","CiMax","maxAll","top","right","left","bottom","paddingLeft","jsfiddleUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, BarChart, Bar\r\n} from 'recharts';\r\n\r\nexport default class ReChart_Bar extends PureComponent {\r\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            Cs: props.Cs,\r\n            Cr: props.Cr,\r\n            Ctc: props.Ctc,\r\n            Cnc: props.Cnc,\r\n            Ci: props.Ci\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let tempArr = [];\r\n        for (let i = 0; i < this.state.Ctc.length; i++) {\r\n            let tempData = {\r\n                name: 'Line ' + (i + 1),\r\n                \"Complexity_By_Type\": this.state.Ctc[i],\r\n                \"Complexity_By_Nested\": this.state.Cnc[i],\r\n                \"Complexity_By_Size\": this.state.Cs[i],\r\n                \"Complexity_By_Recursion\": this.state.Cr[i],\r\n                \"Complexity_By_Inheritence\": this.state.Ci[i]\r\n            }\r\n            tempArr.push(tempData);\r\n        }\r\n\r\n        // Add data\r\n        this.setState({\r\n            data: tempArr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const CtcMax = Math.max(...this.state.Ctc);\r\n        const CncMax = Math.max(...this.state.Cnc);\r\n        const CsMax = Math.max(...this.state.Cs);\r\n        const CrMax = Math.max(...this.state.Cr);\r\n        const CiMax = Math.max(...this.state.Ci);\r\n\r\n        const maxAll = Math.max(CtcMax, CncMax, CsMax,CrMax, CiMax);\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <LineChart\r\n                        width={1200}\r\n                        height={400}\r\n                        data={this.state.data}\r\n                        margin={{\r\n                            top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <YAxis type=\"number\" domain={[0, maxAll]} />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <Tooltip />\r\n                        <Legend\r\n                            verticalAlign=\"top\"\r\n                            height={36}\r\n                            layout=\"vetical\"\r\n                            align=\"right\"\r\n                            wrapperStyle={{\r\n                                paddingLeft: \"10px\"\r\n                            }} />\r\n                        <Line type=\"monotone\" dataKey=\"Complexity_By_Type\" stroke=\"#8884d8\" height=\"10\" />\r\n                        <Line type=\"monotone\" dataKey=\"Complexity_By_Nested\" stroke=\"#82ca9d\" />\r\n                        <Line type=\"monotone\" dataKey=\"Complexity_By_Size\" stroke=\"#f56c42\" />\r\n                        <Line type=\"monotone\" dataKey=\"Complexity_By_Recursion\" stroke=\"#f56c42\" />\r\n                        <Line type=\"monotone\" dataKey=\"Complexity_By_Inheritence\" stroke=\"#6cf542\" />\r\n                    </LineChart>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}