{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\Code_Complexity_SPM\\\\Front_End\\\\src\\\\components\\\\Home\\\\TinyEditor.js\";\nimport React, { Component } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\nclass TinyEditor extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleEditorChange = e => {\n      console.log('Content was updated:', e.target.getContent());\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      apiKey: \"z6kgjxy5fm9stncaajjw4dosfureruvf5lac2bnk54lt6j20\" //initialValue=\"<p>This is the initial content of the editor</p>\"\n      ,\n      init: {\n        height: \"500px\",\n        selector: 'textarea',\n        plugins: 'link image code | code | link | codesample | advcode | pagebreak | save',\n        toolbar: 'undo redo | codesample | image | link | code | pagebreak | save',\n        save_onsavecallback: function () {\n          console.log('Saved');\n        },\n        // init_instance_callback: function (editor) {\n        //     editor.on('GetContent', function (e) {\n        //         e.content.innerHTML += 'My custom content!';\n        //         console.log(e.content)\n        //     });\n        // },\n        codesample_languages: [{\n          text: 'Java',\n          value: 'java'\n        }, {\n          text: 'C',\n          value: 'c'\n        }, {\n          text: 'C#',\n          value: 'csharp'\n        }, {\n          text: 'C++',\n          value: 'cpp'\n        }],\n        codesample_content_css: \"http://ourcodeworld.com/material/css/prism.css\"\n      },\n      onSaveContent: this.handleEditorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TinyEditor;","map":{"version":3,"sources":["E:\\New folder\\Code_Complexity_SPM\\Front_End\\src\\components\\Home\\TinyEditor.js"],"names":["React","Component","Editor","TinyEditor","handleEditorChange","e","console","log","target","getContent","render","marginTop","height","selector","plugins","toolbar","save_onsavecallback","codesample_languages","text","value","codesample_content_css"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BG,kBAF+B,GAETC,CAAD,IAAO;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,CAAC,CAACG,MAAF,CAASC,UAAT,EAApC;AACD,KAJ4B;AAAA;;AAM/BC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,MAAD;AAEI,MAAA,MAAM,EAAC,kDAFX,CAGI;AAHJ;AAII,MAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAE,OADN;AAEFC,QAAAA,QAAQ,EAAE,UAFR;AAGFC,QAAAA,OAAO,EAAE,yEAHP;AAIFC,QAAAA,OAAO,EAAE,iEAJP;AAKFC,QAAAA,mBAAmB,EAAE,YAAY;AAAEV,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAuB,SALxD;AAMF;AACA;AACA;AACA;AACA;AACA;AACAU,QAAAA,oBAAoB,EAAE,CAClB;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SADkB,EAElB;AAAED,UAAAA,IAAI,EAAE,GAAR;AAAaC,UAAAA,KAAK,EAAE;AAApB,SAFkB,EAGlB;AAAED,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,KAAK,EAAE;AAArB,SAHkB,EAIlB;AAAED,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAJkB,CAZpB;AAkBFC,QAAAA,sBAAsB,EAAE;AAlBtB,OAJV;AAyBI,MAAA,aAAa,EAAE,KAAKhB,kBAzBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAoCH;;AA5C8B;;AA+CnC,eAAeD,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nclass TinyEditor extends Component {\r\n\r\n    handleEditorChange = (e) => {\r\n        console.log('Content was updated:', e.target.getContent());\r\n      }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: '50px' }}>\r\n\r\n                <Editor\r\n                    \r\n                    apiKey=\"z6kgjxy5fm9stncaajjw4dosfureruvf5lac2bnk54lt6j20\"\r\n                    //initialValue=\"<p>This is the initial content of the editor</p>\"\r\n                    init={{\r\n                        height: \"500px\",\r\n                        selector: 'textarea',\r\n                        plugins: 'link image code | code | link | codesample | advcode | pagebreak | save',\r\n                        toolbar: 'undo redo | codesample | image | link | code | pagebreak | save',\r\n                        save_onsavecallback: function () { console.log('Saved'); },\r\n                        // init_instance_callback: function (editor) {\r\n                        //     editor.on('GetContent', function (e) {\r\n                        //         e.content.innerHTML += 'My custom content!';\r\n                        //         console.log(e.content)\r\n                        //     });\r\n                        // },\r\n                        codesample_languages: [\r\n                            { text: 'Java', value: 'java' },\r\n                            { text: 'C', value: 'c' },\r\n                            { text: 'C#', value: 'csharp' },\r\n                            { text: 'C++', value: 'cpp' }\r\n                        ],\r\n                        codesample_content_css: \"http://ourcodeworld.com/material/css/prism.css\",\r\n                        \r\n                    }}\r\n                    onSaveContent={this.handleEditorChange}\r\n                    \r\n\r\n                />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TinyEditor;\r\n"]},"metadata":{},"sourceType":"module"}